---
name: Publish to PyPI

on:
  # Publish only when a GitHub Release is published (recommended) or via
  # manual dispatch. Removing the tag push trigger prevents duplicate
  # publishes when a tag push and a release.published both occur.
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish:
        description: 'Set to true to publish to PyPI when running manually'
        required: false
        default: 'false'

permissions:
  contents: read

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build sdist and wheel
        run: python -m build

      - name: PyPI packaging smoke-test (install wheel)
        run: |
          python -m pip install --upgrade pip
          # Install the built wheel into the runner environment to ensure it
          # installs. Use --no-deps so we don't pull heavy runtime deps.
          pip install dist/*.whl --no-deps
          # Read the installed distribution version from metadata instead of
          # importing package code (which would pull heavy deps like pyannote).
          python -c "import importlib.metadata as md; print(md.version('transcribe-with-whisper'))"

      - name: Check PyPI for existing version
        id: check_pypi
        run: |
          set -euo pipefail
          # Extract version from built wheel filename (dist/transcribe_with_whisper-<version>-*.whl)
          whl=$(basename dist/*.whl)
          echo "Found wheel: $whl"
          version=$(python -c "import os,re,sys; fn=os.path.basename('$whl'); m=re.search(r'transcribe_with_whisper-([0-9]+\.[0-9]+\.[0-9]+)', fn); print(m.group(1) if m else '')")
          if [ -z "$version" ]; then
            echo "Could not parse version from wheel filename; failing" >&2
            exit 1
          fi
          echo "Built version: $version"
          # Query PyPI for current version (empty if unreachable). Use curl + a short python -c
          remote=$(curl -s https://pypi.org/pypi/transcribe-with-whisper/json | python -c "import sys,json; data=sys.stdin.read(); print(json.loads(data)['info']['version'] if data else '')" || true)
          echo "Remote PyPI version: $remote"
          if [ -n "$remote" ] && [ "$remote" = "$version" ]; then
            echo "version_exists=true" >> $GITHUB_OUTPUT
          else
            echo "version_exists=false" >> $GITHUB_OUTPUT
          fi

      # No credentials necessary: https://pypi.org/manage/project/transcribe-with-whisper/settings/publishing/
      - name: Publish to PyPI
        if: |
          ((github.event_name == 'release' && github.event.action == 'published') ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true')) &&
          steps.check_pypi.outputs.version_exists != 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

      - name: Add canonical distribution links to Release notes
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: actions/github-script@v6
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const releaseId = context.payload.release.id;
            const pypiUrl = 'https://pypi.org/project/transcribe-with-whisper/';
            const dockerWeb = `ghcr.io/${owner}/${repo}-web`;
            const dockerCli = `ghcr.io/${owner}/${repo}-cli`;
            const windowsAsset = 'MercuryScribe-windows-x86_64.zip';

            const { data: release } = await github.rest.repos.getRelease({ owner, repo, release_id: releaseId });
            let body = release.body || '';
            if (!body.includes(pypiUrl)) {
              const note = '\n\n### Distribution\n' +
                '- PyPI: ' + pypiUrl + '\n' +
                '- Windows bundle: attached to this release as `' + windowsAsset + '` (see Assets)\n' +
                '- Docker images: `' + dockerWeb + ':latest`, `' + dockerCli + ':latest`' +
                ' (also available as SHA-tagged images)\n\n' +
                'You can install the Python package with `pip install ' +
                'transcribe-with-whisper`.\n';
              body = body + note;
              await github.rest.repos.updateRelease({ owner, repo, release_id: releaseId, body });
            } else {
              core.info('Release body already contains PyPI link; skipping update.');
            }
