name: Build and Publish Docker Images (Multi-arch)

on:
  workflow_dispatch:
    inputs:
      publish:
        description: 'Set to true to push images and create manifests when running manually'
        required: false
        default: 'false'
  push:
    branches:
      - main
      - "fix-*"
      - "feature-*"
  pull_request:
    branches:
      - main
      - "fix-*"
      - "feature-*"
  release:
    types: [published]

permissions:
  contents: read
  packages: write

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-push:
    runs-on: ${{ matrix.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: web
            file: Dockerfile
            suffix: web
            arch: amd64
            platform: linux/amd64
          - name: web
            file: Dockerfile
            suffix: web
            arch: arm64
            platform: linux/arm64
          - name: cli
            file: Dockerfile.cli
            suffix: cli
            arch: amd64
            platform: linux/amd64
          - name: cli
            file: Dockerfile.cli
            suffix: cli
            arch: arm64
            platform: linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive image name
        id: img
        run: |
          REPO_NAME=${GITHUB_REPOSITORY#*/}
          echo "image=ghcr.io/${{ github.repository_owner }}/${REPO_NAME}-${{ matrix.suffix }}" >> $GITHUB_OUTPUT

      - name: Show image details
        run: |
          echo "Image: ${{ steps.img.outputs.image }}"
          echo "Dockerfile: ${{ matrix.file }}"
          echo "Architecture: ${{ matrix.arch }}"
          echo "Platform: ${{ matrix.platform }}"

      - name: Build and push (${{ matrix.arch }})
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.file }}
          platforms: ${{ matrix.platform }}
          # Only push images for release.published or manual dispatches (opt-in).
          push: ${{ (github.event_name == 'release' && github.event.action == 'published') || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true') }}
          tags: |
            ${{ steps.img.outputs.image }}:latest-${{ matrix.arch }}
            ${{ steps.img.outputs.image }}:${{ github.sha }}-${{ matrix.arch }}
          cache-from: type=gha,scope=${{ matrix.suffix }}-${{ matrix.arch }}
          cache-to: type=gha,mode=max,scope=${{ matrix.suffix }}-${{ matrix.arch }}

  create-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    # Only create and push manifests for release publishes or manual dispatches (opt-in).
    if: |
      (github.event_name == 'release' && github.event.action == 'published') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true')
    strategy:
      matrix:
        suffix: [web, cli]
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          REPO_NAME=${GITHUB_REPOSITORY#*/}
          IMAGE=ghcr.io/${{ github.repository_owner }}/${REPO_NAME}-${{ matrix.suffix }}

          # Create manifest for latest
          docker buildx imagetools create -t ${IMAGE}:latest \
            ${IMAGE}:latest-amd64 \
            ${IMAGE}:latest-arm64

          # Create manifest for SHA
          docker buildx imagetools create -t ${IMAGE}:${{ github.sha }} \
            ${IMAGE}:${{ github.sha }}-amd64 \
            ${IMAGE}:${{ github.sha }}-arm64
