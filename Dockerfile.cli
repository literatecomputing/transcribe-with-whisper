FROM python:3.11-slim

WORKDIR /app

# Install ffmpeg, pandoc and runtime/build deps
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        ffmpeg \
        pandoc \
        texlive-latex-recommended \
        texlive-fonts-recommended \
        texlive-latex-extra \
        build-essential \
        git \
        cmake \
        pkg-config \
        libavcodec-dev \
        libavformat-dev \
        libavutil-dev \
        libswscale-dev \
    && rm -rf /var/lib/apt/lists/*

# Install the package from PyPI by default; fallback to local copy if you build in-repo
# Set this ARG at build time to switch sources: --build-arg INSTALL_FROM=local
ARG INSTALL_FROM=pypi

# Use standard requirements.txt
COPY requirements.txt /tmp/requirements.txt
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
    && if [ "$(uname -m)" = "aarch64" ]; then \
        echo "Building for ARM64 - installing PyTorch first, then torchcodec from source..."; \
        pip install --no-cache-dir torch==2.8.0; \
        BUILD_AGAINST_ALL_FFMPEG_FROM_S3=1 pip install --no-cache-dir --no-build-isolation git+https://github.com/pytorch/torchcodec.git; \
    fi \
    && pip install --no-cache-dir -r /tmp/requirements.txt

# Install console package (pypi or local)
COPY . /app
RUN if [ "$INSTALL_FROM" = "local" ]; then \
        pip install --no-cache-dir . ; \
    else \
        pip install --no-cache-dir transcribe-with-whisper ; \
    fi

# Create a mount point for user files
VOLUME ["/data"]
WORKDIR /data

# Default entrypoint runs the CLI; you can override at runtime
ENTRYPOINT ["transcribe-with-whisper"]
CMD ["--help"]
